<?xml version="1.0"?>

<robot name="diffdrive_robot" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:include filename="$(find diffdrive_description)/urdf/macros.urdf.xacro" />
    <xacro:property name="base_width" value="0.31" />
    <xacro:property name="base_length" value="0.42" />
    <xacro:property name="base_height" value="0.18" />
    <xacro:property name="base_mass" value="1.0" />

    <xacro:property name="wheel_radius" value="0.10" />
    <xacro:property name="wheel_width" value="0.04" />
    <xacro:property name="wheel_ygap" value="0.025" />
    <xacro:property name="wheel_zoff" value="0.05" />
    <xacro:property name="wheel_xoff" value="0.12" />
    <xacro:property name="wheel_mass" value="0.5" />

    <xacro:property name="caster_xoff" value="0.15" />
    <xacro:property name="caster_mass" value="0.10" />

    <link name="base_footprint" />

    <link name="base_link">
        <xacro:box_inertia m="${base_mass}" w="${base_width}" d="${base_length}" h="${base_height}" />
        <visual>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <box size="${base_length} ${base_width} ${base_height}" />
            </geometry>
        </collision>
    </link>

    <joint name="base_joint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link" />
        <origin xyz="0.0 0.0  ${wheel_radius + base_height/2 - wheel_zoff}" rpy="0 0 0" />
    </joint>

    <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
        <link name="${prefix}_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
                <material name="Gray">
                    <color rgba="0.5 0.5 0.5 1.0" />
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_width}" />
                </geometry>
            </collision>
            <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}" />
        </link>

        <joint name="${prefix}_joint" type="continuous">
            <parent link="base_link" />
            <child link="${prefix}_link" />
            <origin
                xyz="${x_reflect*wheel_xoff} ${y_reflect*(base_width/2+wheel_ygap)} ${-wheel_zoff}"
                rpy="0 0 0" />
            <axis xyz="0 1 0" />
        </joint>
    </xacro:macro>

    <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
    <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

    <gazebo>
        <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
            <left_joint>drivewhl_l_joint</left_joint>
            <right_joint>drivewhl_r_joint</right_joint>

            <wheel_separation>0.4</wheel_separation>
            <wheel_radius>0.1</wheel_radius>

            <max_linear_acceleration>0.2</max_linear_acceleration>

            <topic>cmd_vel</topic>
            <odom_topic>odom</odom_topic>
            <frame_id>odom</frame_id>
            <child_frame_id>base_footprint</child_frame_id>
            <odom_publisher_frequency>30</odom_publisher_frequency>
            <tf_topic>/tf</tf_topic>
        </plugin>

        <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
            <topic>joint_states</topic>
            <joint_name>drivewhl_l_joint</joint_name>
            <joint_name>drivewhl_r_joint</joint_name>
        </plugin>
    </gazebo>

    <link name="front_caster">
        <visual>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}" />
            </geometry>
            <material name="Cyan">
                <color rgba="0 1.0 1.0 1.0" />
            </material>
        </visual>
        <collision>
            <geometry>
                <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}" />
            </geometry>
        </collision>
        <xacro:sphere_inertia m="${caster_mass}" r="${(wheel_radius+wheel_zoff-(base_height/2))}" />
    </link>

    <joint name="caster_joint" type="fixed">
        <parent link="base_link" />
        <child link="front_caster" />
        <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0" />
    </joint>

    <gazebo reference="front_caster">
        <mu>0.001</mu>
        <mu2>0.001</mu2>
    </gazebo>

    <link name="imu_link">
        <visual>
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </visual>

        <collision>
            <geometry>
                <box size="0.1 0.1 0.1" />
            </geometry>
        </collision>

        <xacro:box_inertia m="0.1" w="0.1" d="0.1" h="0.1" />
    </link>

    <joint name="imu_joint" type="fixed">
        <parent link="base_link" />
        <child link="imu_link" />
        <origin xyz="0 0 0.01" />
    </joint>

    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <plugin filename="libignition-gazebo-imu-system.so" name="ignition::gazebo::systems::Imu"/>
            <always_on>1</always_on>
            <update_rate>10</update_rate>
            <visualize>true</visualize>
            <topic>imu</topic>
            <gz_frame_id>imu_link</gz_frame_id>
        </sensor>
    </gazebo>
</robot>